#EXTRA_LINK_FLAGS = -lifcore
# Intel  
#CXX = mpiicpc
#MPIINC = /usr/local/tools/mvapich-intel/include
#MPILIB = /usr/local/tools/mvapich-intel/lib
# gnu
MPIPATH = /usr/local/tools/mvapich2-gnu
# Intel
#MPIPATH = /usr/local/tools/mvapich2-intel
# Pgi
#MPIPATH = /usr/local/tools/mvapich2-pgi
#
#CXX    = $(MPIPATH)/bin/mpicxx
MPIINC = $(MPIPATH)/include
MPILIB = $(MPIPATH)/lib
CXX = nvcc
#
#

ifeq ($(debug),yes)
   optlevel = DEBUG
else
   debug := "no"
   optlevel = OPTIMIZE
endif

ifeq ($(optlevel),DEBUG)
   FFLAGS    = -g 
   CXXFLAGS  = -g -x cu -I../src -c -dc -arch=sm_35 -DBZ_DEBUG -DSW4_CROUTINES -DSW4_CUDA -I$(MPIINC)
   CFLAGS    = -g
else
   FFLAGS   = -O3 
   CXXFLAGS = -O3 -x cu -I../src -c -dc -arch=sm_35 -DSW4_CROUTINES -DSW4_CUDA -I$(MPIINC)
   CFLAGS   = -O 
endif

#FFLAGS   += -Mcuda 
#CXXFLAGS += -DSW4_OPENMP
#CFLAGS   += -openmp -DSW4_OPENMP

fullpath := $(shell pwd)

HOSTNAME := $(shell hostname)
UNAME := $(shell uname)

debugdir := debug_cuda
optdir := optimize_cuda

ifdef EXTRA_CXX_FLAGS
   CXXFLAGS += $(EXTRA_CXX_FLAGS)
endif

ifdef EXTRA_FORT_FLAGS
   FFLAGS += $(EXTRA_FORT_FLAGS)
endif

ifdef EXTRA_LINK_FLAGS
   linklibs += $(EXTRA_LINK_FLAGS)
endif

ifeq ($(optlevel),DEBUG)
   builddir = $(debugdir)
else
   builddir = $(optdir)
endif

OBJ  = main.o EW.o Source.o rhs4sg.o SuperGrid.o GridPointSource.o time_functions.o ew-cfromfort.o EW_cuda.o Sarray.o device-routines.o EWCuda.o CheckPoint.o Parallel_IO.o

FOBJ = $(addprefix $(builddir)/,$(OBJ))

sw4g: $(FOBJ) 
	@echo "********* User configuration variables **************"
	@echo "debug=" $(debug) " proj=" $(proj) " etree=" $(etree) " SW4ROOT"= $(SW4ROOT) 
	@echo "CXX=" $(CXX) "EXTRA_CXX_FLAGS"= $(EXTRA_CXX_FLAGS)
	@echo "FC=" $(FC) " EXTRA_FORT_FLAGS=" $(EXTRA_FORT_FLAGS)
	@echo "EXTRA_LINK_FLAGS"= $(EXTRA_LINK_FLAGS)
	@echo "******************************************************"
	cd $(builddir); nvcc -L$(MPILIB) -Xlinker "-rpath=$(MPILIB)" -arch=sm_35 -o $@ $(OBJ) -lcudart -lmpich -lmpl -lpmi
	@cat wave.txt
	@echo "*** Build directory: " $(builddir) " ***"

$(builddir)/%.o:src/%.C
	/bin/mkdir -p $(builddir)
	cd $(builddir); $(CXX) $(CXXFLAGS) -c ../$< 

$(builddir)/%.o:src/%.f
	/bin/mkdir -p $(builddir)
	cd $(builddir); $(FC) $(FFLAGS) -c ../$< 

clean:
	cd optimize_cuda;/bin/rm *.o
