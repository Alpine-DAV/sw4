----------------------------------------------------------------
            sw4 version 2.2-alpha

 This program comes with ABSOLUTELY NO WARRANTY; released under GPL.
 This is free software, and you are welcome to redistribute     
 it under certain conditions, see LICENSE.txt for more details  
----------------------------------------------------------------
  Compiled on: Thu Dec  6 00:32:26 PST 2018
  By user:     kechen
  Machine:     cori08
  Compiler:    /opt/cray/pe/craype/2.5.14/bin/CC
  3rd party include dir: /global/homes/k/kechen/software/sw4_dp/include, and library dir: /global/homes/k/kechen/software/sw4_dp/lib
----------------------------------------------------------------

Input file: inv2.in

* Processing the grid command...
* Setting nx to 301 to be consistent with h=200
* Setting ny to 251 to be consistent with h=200
* Setting nz to 101 to be consistent with h=200
Extent of the computational domain xmax=60000 ymax=50000 zmax=20000

*** No topography command found in input file. Using z=0 as free surface boundary ***


Global grid sizes (without ghost points)
Grid         h        Nx        Ny        Nz       Points
   0       200       301       251       101      7630651
Total number of grid points (without ghost points): 7.63065e+06

Cartesian coordinates of source at (lon, lat)=(-1.220011e+02, 3.786081e+01) is (x,y)=(26596.9, 8784.74)
Cartesian coordinates of source at (lon, lat)=(-1.222423e+02, 3.786119e+01) is (x,y)=(13991.6, 25834.7)


   Execution time, reading input file 0.752598 seconds 
  Using Bjorn's fast (parallel) IO library
Assuming a PARALLEL file system
Writing images from (up to) 8 procs
Detected at least one boundary with supergrid conditions
----------------------------------------------------
 Making Directory: first-fake-event_output/
		
... Done!
----------------------------------------------------
----------------------------------------------------
 Making Directory: second-fake-event_output/
		
... Done!
----------------------------------------------------
Geographic and Cartesian coordinates of the corners of the computational grid:
0: Lon= -1.221000e+02, Lat=3.810000e+01, x=0.000000e+00, y=-0.000000e+00
1: Lon= -1.216963e+02, Lat=3.766596e+01, x=6.000000e+04, y=-2.409573e-10
2: Lon= -1.221530e+02, Lat=3.739966e+01, x=6.000000e+04, y=5.000000e+04
3: Lon= -1.225580e+02, Lat=3.783370e+01, x=2.200305e-10, y=5.000000e+04

Considering all material blocks
block command: outside = 7857304, material = 75551
block command: outside = 7857304, material = 75551
block command: outside = 7857304, material = 75551
block command: outside = 7857304, material = 75551
block command: outside = 7781753, material = 151102
block command: outside = 7101794, material = 831061
block command: outside = 7101794, material = 831061
block command: outside = 7479549, material = 453306
block command: outside = 5968529, material = 1964326
block command: outside = 5968529, material = 1964326
block command: outside = 6195182, material = 1737673

       ----------- Material properties ranges ---------------
       2200 kg/m^3 <=  Density <= 2900 kg/m^3
       2400 m/s    <=  Vp      <= 6550 m/s
       1200 m/s    <=  Vs      <= 3700 m/s
       1.70833        <=  Vp/Vs   <= 2
       3.168e+09 Pa     <=  mu      <= 3.9701e+10 Pa
       6.336e+09 Pa     <=  lambda  <= 4.50152e+10 Pa
       ------------------------------------------------------

***** PPW = minVs/h/maxFrequency ********
g=0, h=2.000000e+02, minVs/h=6 (Cartesian)

  Assigned material properties
*** computing the time step ***
TIME accuracy order=4 CFL=1.1 prel. time step=0.0262421
*** Initialized Images
 Min source z-level: 1.320700e+04, max source z-level: 1.320700e+04
 Min source z-level: 1.210100e+04, max source z-level: 1.210100e+04

   Execution time, start up phase 0.0798249 seconds 
 xmin, xmax = 6200 53800 hx = 23800
 ymin, ymax = 6200 43800 hy = 18800
 zmin, zmax = -13800 13800 hz = 13800
----------------------------------------------------
 Making Directory: inv2_output/
		
... Done!
----------------------------------------------------
Running sw4mopt on 256 processors, using 2 threads/processor...
Writing output to directory: inv2_output/
Begin NLCG iteration by evaluating initial misfit and gradient...
Initial misfit= 2.3072e-06
Max norm of scaled total gradient = 0.00102294
After constrained material, lambda = 0.7 ntries = 2
writing image plane on file inv2_output/mimage.cycle=000.z=1000.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=000.x=17500.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=000.x=17500.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=000.x=17500.lambda.sw4img
writing image plane on file inv2_output/mimage.cycle=000.z=1000.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=000.z=1000.lambda.sw4img
writing image plane on file inv2_output/mimage.cycle=000.z=5000.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=000.z=5000.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=000.z=5000.lambda.sw4img
-----------------------------------------------------------------------
 it=1 1 dfnorm= 0.00051566 dxnorm= 0.000162263
 Misfit= 2.10095e-06
After constrained material, lambda = 0.2401 ntries = 5
writing image plane on file inv2_output/mimage.cycle=001.z=1000.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=001.x=17500.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=001.x=17500.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=001.x=17500.lambda.sw4img
writing image plane on file inv2_output/mimage.cycle=001.z=1000.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=001.z=1000.lambda.sw4img
writing image plane on file inv2_output/mimage.cycle=001.z=5000.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=001.z=5000.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=001.z=5000.lambda.sw4img
-----------------------------------------------------------------------
 it=2 1 dfnorm= 0.000394975 dxnorm= 5.60367e-05
 Misfit= 2.05414e-06
After constrained material, lambda = 0.0197733 ntries = 12
writing image plane on file inv2_output/mimage.cycle=002.z=1000.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=002.x=17500.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=002.x=17500.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=002.x=17500.lambda.sw4img
writing image plane on file inv2_output/mimage.cycle=002.z=1000.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=002.z=1000.lambda.sw4img
writing image plane on file inv2_output/mimage.cycle=002.z=5000.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=002.z=5000.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=002.z=5000.lambda.sw4img
-----------------------------------------------------------------------
 it=3 1 dfnorm= 0.000389028 dxnorm= 2.95627e-06
 Misfit= 2.05215e-06
After constrained material, lambda = 0.00474756 ntries = 16
writing image plane on file inv2_output/mimage.cycle=003.z=1000.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=003.x=17500.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=003.x=17500.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=003.x=17500.lambda.sw4img
writing image plane on file inv2_output/mimage.cycle=003.z=1000.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=003.z=1000.lambda.sw4img
writing image plane on file inv2_output/mimage.cycle=003.z=5000.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=003.z=5000.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=003.z=5000.lambda.sw4img
-----------------------------------------------------------------------
 it=4 1 dfnorm= 0.000387643 dxnorm= 6.94167e-07
 Misfit= 2.05169e-06
After constrained material, lambda = 0.00113989 ntries = 20
writing image plane on file inv2_output/mimage.cycle=004.z=1000.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=004.x=17500.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=004.x=17500.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=004.x=17500.lambda.sw4img
writing image plane on file inv2_output/mimage.cycle=004.z=1000.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=004.z=1000.lambda.sw4img
writing image plane on file inv2_output/mimage.cycle=004.z=5000.rho.sw4img
writing image plane on file inv2_output/mimage.cycle=004.z=5000.mu.sw4img
writing image plane on file inv2_output/mimage.cycle=004.z=5000.lambda.sw4img
-----------------------------------------------------------------------
 it=5 1 dfnorm= 0.000387313 dxnorm= 1.65831e-07
 Misfit= 2.05158e-06
============================================================
 sw4mopt ( Material/Source estimation solver) finished! 
============================================================
